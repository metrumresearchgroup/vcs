% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsubr.R
\name{gsubr}
\alias{gsubr}
\title{Recursive gsub}
\usage{
gsubr(pattern, replacement, path, recursive = FALSE, test = TRUE, ...)
}
\arguments{
\item{pattern}{character, string containing a regular expression}

\item{replacement}{character, replacement pattern}

\item{path}{character, path to search, see details}

\item{recursive}{logical, Should the listing recurse into directories?
passed to list.files, Default: FALSE}

\item{test}{logical, Should the gsub be tested to console or 
replace on disk, Default: TRUE}

\item{...}{arguments passed to gsub}
}
\value{
character
}
\description{
Recursive call to gsub in R
}
\examples{

dir.create(file.path(tempdir(), 'gsubr/d'),recursive = TRUE)

path_up <- tempfile(pattern = 'gsubr-', 
fileext = '.txt', 
tmpdir = file.path(tempdir(), 'gsubr'))

path_down <- tempfile(pattern = 'gsubr-', 
fileext = '.txt', 
tmpdir = file.path(tempdir(), 'gsubr/d'))

cat('this is a test',sep='\n',file = path_up)

cat('this is a test in the subdir',sep='\n',file = path_down)

list.files(tempdir(),recursive = TRUE)

gsubr(pattern = '\\\\bis\\\\b', 
replacement = 'was', 
path = tempdir(),
recursive = TRUE)

gsubr(pattern = '\\\\bis\\\\b', 
replacement = 'was', 
path = tempdir(),
recursive = TRUE,
test = FALSE)

readLines(path_up)
readLines(path_down)

unlink(file.path(tempdir(),'gsubr'),recursive = TRUE)

}
